#!/usr/bin/env lua
local argparse = require("argparse")
local trim
trim = require("lapis.util").trim
local parser = argparse("widget_helper.moon", "Widget asset compilation and build generation")
parser:command_target("command")
parser:flag("--moonscript", "Enable MoonScript module loading")
do
  local _with_0 = parser:command("debug", "Show any extractable information about a widget module")
  _with_0:argument("module_name")
end
do
  local _with_0 = parser:command("compile_js", "Compile the individual js_init function for a module")
  _with_0:option("--module")
  _with_0:option("--file")
  _with_0:option("--package")
end
do
  local _with_0 = parser:command("generate_spec", "Scan widgets and generate specification for compiling bundles")
  _with_0:option("--widget-dirs"):default("views,widgets"):convert(function(str)
    local _accum_0 = { }
    local _len_0 = 1
    for d in str:gmatch("[^,]+") do
      _accum_0[_len_0] = trim(d)
      _len_0 = _len_0 + 1
    end
    return _accum_0
  end)
  _with_0:option("--format", "Output format for scan results"):choices({
    "json",
    "tup"
  }):default("json")
end
local args = parser:parse((function()
  local _accum_0 = { }
  local _len_0 = 1
  for _, v in ipairs(_G.arg) do
    _accum_0[_len_0] = v
    _len_0 = _len_0 + 1
  end
  return _accum_0
end)())
local run
run = require("lapis.eswidget.cmd").run
return run(args)
-- vim: set filetype=lua:
